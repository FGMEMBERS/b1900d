<?xml version="1.0"?>
<!--
    Autopilot Version 4 Configuration for the B1900D
    -->
<PropertyList>

	<!-- Wing leveler -->
	<pid-controller>
		<name>Wing Leveler</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/heading</prop>
			<value>wing-leveler</value>
			 <honor-passive>true</honor-passive>
		</enable>
		<input>
			<prop>/orientation/roll-deg</prop>
		</input>
		<reference>
			<value>0.0</value>
		</reference>
		<output>
			<prop>/controls/flight/aileron</prop>
		</output>
		<config>
			<Kp>0.5</Kp>
			<!-- proportional gain -->
			<beta>1.0</beta>
			<!-- input value weighing factor -->
			<alpha>0.1</alpha>
			<!-- low pass filter weighing factor -->
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>10.0</Ti>
			<!-- integrator time -->
			<Td>0.00001</Td>
			<!-- derivator time -->
			<u_min>-0.25</u_min>
			<!-- minimum output clamp -->
			<u_max>0.25</u_max>
			<!-- maximum output clamp -->
		</config>
	</pid-controller>
	<!--
    Heading Bug Hold.  2 stage cascade controller.
    Stage #1 sets target roll based on diff between current heading
    and heading bug.
-->
	<pi-simple-controller>
		<name>Heading Bug Hold (DG based) Stage 1</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/heading</prop>
			<value>dg-heading-hold</value>
		</enable>
		<input>
			<prop>/autopilot/internal/fdm-heading-bug-error-deg</prop>
		</input>
		<reference>
			<value>0.0</value>
		</reference>
		<output>
			<prop>/autopilot/internal/target-roll-deg</prop>
		</output>
		<config>
			    <Kp>-2.0</Kp>
			    <Ki>0.0</Ki>
			    <u_min>-30.0</u_min>
			    <u_max>30.0</u_max>  
			</config>
	</pi-simple-controller>
	<!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
	<pid-controller>
		<name>Heading Bug Hold (DG based) Stage 2</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/heading</prop>
			<value>dg-heading-hold</value>
			 <honor-passive>true</honor-passive>
		</enable>
		<input>
			<prop>/orientation/roll-deg</prop>
		</input>
		<reference>
			<prop>/autopilot/internal/target-roll-deg</prop>
		</reference>
		<output>
			<prop>/controls/flight/aileron</prop>
		</output>
		<config>
			<Kp>0.5</Kp>
			<beta>1.0</beta>
			<alpha>0.1</alpha>
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>20.0</Ti>
			<!-- integrator time -->
			<Td>0.0001</Td>
			<!-- derivator time -->
			<u_min>-1.0</u_min>
			<!-- minimum output clamp -->
			<u_max>1.0</u_max>
			<!-- maximum output clamp -->
		</config>
	</pid-controller>
	<!--
    Nav1 hold.  2 stage cascade controller.
    Stage #1 sets target roll based on nav1-heading-error-deg.
-->
	<pid-controller>
		<name>Nav1 Hold Stage 1</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/heading</prop>
			<value>nav1-hold</value>
		</enable>
		<input>
			<prop>/instrumentation/flightdirector/nav-hdg</prop>
		</input>
		<reference>
			<value>0.0</value>
		</reference>
		<output>
			<prop>/autopilot/internal/target-roll-deg</prop>
		</output>
		<config>
			<Kp>-1.3</Kp>
			<beta>1.0</beta>
			<alpha>0.1</alpha>
			<gamma>0.0</gamma>
			<Ti>40</Ti>
			<Td>0.00001</Td>
			<u_min>-30.0</u_min>
			<u_max>30.0</u_max>
			</config>
	</pid-controller>
	<!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->
	<pid-controller>
		<name>Nav1 Hold Stage 2</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/heading</prop>
			<value>nav1-hold</value>
			 <honor-passive>true</honor-passive>
		</enable>
		<input>
			<prop>/orientation/roll-deg</prop>
		</input>
		<reference>
			<prop>/autopilot/internal/target-roll-deg</prop>
		</reference>
		<output>
			<prop>/controls/flight/aileron</prop>
		</output>
		<config>
			<Kp>0.1</Kp>
			<!-- proportional gain -->
			<beta>1.0</beta>
			<!-- input value weighing factor -->
			<alpha>0.1</alpha>
			<!-- low pass filter weighing factor -->
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>20.0</Ti>
			<!-- integrator time -->
			<Td>0.00001</Td>
			<!-- derivator time -->
			<u_min>-0.25</u_min>
			<!-- minimum output clamp -->
			<u_max>0.25</u_max>
			<!-- maximum output clamp -->
		</config>
	</pid-controller>

	<!--
    ================
    Pitch Axis Modes
    ================
-->
	<!--
    Altitude Select hold.  2 stage cascade controller.
    Stage #1 sets target rate of climb based on diff between current alt
    and target altitude.
-->
<pi-simple-controller>
  <name>Altitude Hold (Altimeter based) Stage 1</name>
  <debug>false</debug>
  <enable>
    <prop>/autopilot/locks/altitude</prop>
    <value>altitude-hold</value>
  </enable>
  <input>
    <prop>/position/altitude-ft</prop>
  </input>
  <reference>
    <prop>/autopilot/settings/target-altitude-ft</prop>
  </reference>
  <output>
    <prop>/autopilot/internal/target-climb-rate-fps</prop>
  </output>
  <config>
    <Kp>0.3</Kp>
    <!-- proportional gain -->
    <Ki>0.0</Ki>
    <u_min>-33.3</u_min>
    <!-- minimum output clamp -->
    <u_max>33.3</u_max>
    <!-- maximum output clamp -->
  </config>
</pi-simple-controller>

<!-- Stage #2 drives the target-pitch to achieve the desired climb -->
<!-- rate. -->
<pid-controller>
  <name>Altitude Hold (Altimeter based) Stage 2</name>
  <debug>false</debug>
  <enable>
    <prop>/autopilot/locks/altitude</prop>
    <value>altitude-hold</value>
  </enable>
  <input>
    <prop>/velocities/vertical-speed-fps</prop>
  </input>
  <reference>
    <prop>/autopilot/internal/target-climb-rate-fps</prop>
  </reference>
  <output>
    <prop>/autopilot/settings/target-pitch-deg</prop>
  </output>
  <config>
    <Kp>0.06</Kp>       <!-- proportional gain -->
    <beta>1.0</beta>    <!-- input value weighing factor -->
    <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
    <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                        <!-- unfiltered derivative error -->
    <Ti>10.0</Ti>       <!-- integrator time -->
    <Td>0.00001</Td>    <!-- derivator time -->
    <u_min>-5.0</u_min> <!-- minimum output clamp -->
    <u_max>5.0</u_max>  <!-- maximum output clamp -->
  </config>
</pid-controller>

<!-- Stage #3 drives the elevator trim to achieve the desired pitch -->
<!-- angle -->
<pid-controller>
  <name>Pitch hold</name>
  <debug>false</debug>
  <enable>
    <prop>/autopilot/locks/altitude</prop>
    <value>altitude-hold</value>
    <honor-passive>true</honor-passive>
  </enable>
  <input>
    <prop>/orientation/pitch-deg</prop>
  </input>
  <reference>
    <prop>/autopilot/settings/target-pitch-deg</prop>
  </reference>
  <output>
    <prop>/controls/flight/elevator-trim</prop>
  </output>
  <config>
    <Kp>-0.15</Kp>      <!-- proportional gain -->
    <beta>1.0</beta>    <!-- input value weighing factor -->
    <alpha>0.1</alpha>  <!-- low pass filter weighing factor -->
    <gamma>0.0</gamma>  <!-- input value weighing factor for -->
                        <!-- unfiltered derivative error -->
    <Ti>10.0</Ti>       <!-- integrator time -->
    <Td>0.02</Td>       <!-- derivator time -->
    <u_min>-1.0</u_min> <!-- minimum output clamp -->
    <u_max>1.0</u_max>  <!-- maximum output clamp -->
  </config>
</pid-controller>
	<!--
    Simple Altitude Baro hold.
    sets target rate of climb based on diff between current inhg
    and target inhg.
-->
	<pid-controller>
		<name>Current Altitude Hold Stage 1</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/altitude</prop>
			<value>altitude-hold</value>
		</enable>
		<input>
			<prop>/position/altitude-ft</prop>
		</input>
		<reference>
			<prop>/autopilot/settings/target-alt-hold</prop>
		</reference>
		<output>
			<prop>/autopilot/internal/target-climb-rate-fps</prop>
		</output>
		<config>
      <Ts>0.02</Ts>
      <Kp>0.5</Kp>
      <beta>1.0</beta>
      <alpha>0.01</alpha>
      <gamma>0.0</gamma>
      <Ti>20.0</Ti>
      <Td>0.0000000000000000000000000000000000001</Td>
       <u_min>-8.3</u_min>
	<u_max>8.3</u_max>
	</config>
	</pid-controller>
	<!-- Stage #2 drives the elevator-trim to achieve the desired climb rate. -->
	<pid-controller>
		<name>Current Altitude Hold Stage 2</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/altitude</prop>
			<value>altitude-hold</value>
			 <honor-passive>true</honor-passive>
		</enable>
		<input>
			<prop>/velocities/vertical-speed-fps</prop>
		</input>
		<reference>
			<prop>/autopilot/internal/target-climb-rate-fps</prop>
		</reference>
		<output>
			<prop>/controls/flight/elevator-trim</prop>
		</output>
		<config>
			<Kp>-0.005</Kp>
			<!-- proportional gain -->
			<beta>1.0</beta>
			<!-- input value weighing factor -->
			<alpha>0.1</alpha>
			<!-- low pass filter weighing factor -->
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>10.0</Ti>
			<!-- integrator time -->
			<Td>0.00001</Td>
			<!-- derivator time -->
			<u_min>-1.0</u_min>
			<!-- minimum output clamp -->
			<u_max>1.0</u_max>
			<!-- maximum output clamp -->
		</config>
			</pid-controller>

<!-- Glideslope hold. -->

	<pid-controller>
		<name>Glideslope Hold</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/altitude</prop>
			<value>gs1-hold</value>
			 <honor-passive>true</honor-passive>
		</enable>
		<input>
			<prop>/velocities/vertical-speed-fps</prop>
		</input>
		<reference>
			<prop>/instrumentation/nav[0]gs-rate-of-climb</prop>
		</reference>
		<output>
			<prop>/controls/flight/elevator-trim</prop>
		</output>
		<config>
			<Kp>-0.004</Kp>
			<!-- proportional gain -->
			<beta>1.0</beta>
			<!-- input value weighing factor -->
			<alpha>0.1</alpha>
			<!-- low pass filter weighing factor -->
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>10</Ti>
			<!-- integrator time -->
			<Td>0.00001</Td>
			<!-- derivator time -->
			<u_min>-.68</u_min>
			<!-- minimum output clamp -->
			<u_max>.68</u_max>
			<!-- maximum output clamp -->
		</config>
	</pid-controller>
	<!--


    ==============
    Velocity Modes
    ==============
-->
	<!-- Simple Auto throttle -->
	<pid-controller>
		<name>Auto Throttle</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/speed</prop>
			<value>ias-hold</value>
		</enable>
		<input>
			<prop>/velocities/airspeed-kt</prop>
		</input>
		<reference>
			<prop>/autopilot/settings/target-speed-kt</prop>
		</reference>
		<output>
			<prop>/controls/engines/engine[0]/throttle</prop>
			<prop>/controls/engines/engine[1]/throttle</prop>
		</output>
		<config>
			<Kp>0.1</Kp>
			<!-- proportional gain -->
			<beta>1.0</beta>
			<!-- input value weighing factor -->
			<alpha>0.1</alpha>
			<!-- low pass filter weighing factor -->
			<gamma>0.0</gamma>
			<!-- input value weighing factor for -->
			<!-- unfiltered derivative error -->
			<Ti>10.0</Ti>
			<!-- integrator time -->
			<Td>0.001</Td>
			<!-- derivator time -->
			<u_min>0.0</u_min>
			<!-- minimum output clamp -->
			<u_max>1.0</u_max>
			<!-- maximum output clamp -->
		</config>
	</pid-controller>

	<!-- Simple VS Hold -->
	<pid-controller>
		<name>VS Hold</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/speed</prop>
			<value>vs-hold</value>
		</enable>
		<input>
			<prop>/velocities/vertical-speed-fps</prop>
		</input>
		<reference>
			<prop>/autopilot/settings/target-vs-fps</prop>
		</reference>
		<output>
			<prop>/autopilot/internal/target-climb-rate-fps</prop>
		</output>
		<config>
      <Ts>0.02</Ts>
      <Kp>-0.008</Kp>
      <beta>1.0</beta>
      <alpha>0.1</alpha>
      <gamma>0.0</gamma>
      <Ti>10.0</Ti>
      <Td>0.1</Td>
      <u_min>-1.0</u_min>
      <u_max>1.0</u_max>
      </config>
	</pid-controller>


	<!-- Simple Climb Hold -->
	<pid-controller>
		<name>Climb Hold</name>
		<debug>false</debug>
		<enable>
			<prop>/autopilot/locks/speed</prop>
			<value>climb-hold</value>
		</enable>
		<input>
			<prop>/velocities/vertical-speed-fps</prop>
		</input>
		<reference>
			<prop>/autopilot/settings/target-vs-fps</prop>
		</reference>
		<output>
			<prop>/autopilot/internal/target-climb-rate-fps</prop>
		</output>
		<config>
      <Ts>0.02</Ts>
      <Kp>-0.008</Kp>
      <beta>1.0</beta>
      <alpha>0.1</alpha>
      <gamma>0.0</gamma>
      <Ti>10.0</Ti>
      <Td>0.1</Td>
      <u_min>-1.0</u_min>
      <u_max>1.0</u_max>
      </config>
	</pid-controller>


</PropertyList>

